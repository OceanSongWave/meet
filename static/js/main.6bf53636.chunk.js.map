{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","showButton","showDetails","setState","event","this","props","className","summary","start","dateTime","timeZone","location","description","target","rel","href","htmlLink","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","locations","query","suggestions","showSuggestions","undefined","handleInputChanged","value","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","numberOfEvents","mockData","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","extractLocations","Set","getAccessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","axios","results","authUrl","data","getEvents","NProgress","startsWith","done","token","url","JSON","stringify","App","currentLocation","eventCount","filteredEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.6bf53636.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    show: false,\n    showButton: \"show details\",\n  };\n  showDetails = () => {\n    if (this.state.show === true) {\n      this.setState({ show: false, showButton: \"show details\" });\n    } else {\n      this.setState({ show: true, showButton: \"hide details\" });\n    }\n  };\n\n  render() {\n    const event = this.props.event;\n    return (\n      <div className=\"event\">\n        <div className=\"summary\">\n          <h1>{event.summary}</h1>\n        </div>\n        <div className=\"eventInfo_collapsed\">\n          <span className=\"startDateTime\">\n            {event.start.dateTime} ({event.start.timeZone} Standard Time)\n          </span>\n          <br />\n          <span className=\"location\">\n            @{event.summary} | {event.location}\n          </span>\n        </div>\n        {this.state.show && (\n          <div className=\"detailInfo\">\n            <h2>About event:</h2>\n            <div className=\"description\">{event.description}</div>\n            <a\n              className=\"eventLink\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href={event.htmlLink}\n            >\n              See details on Google Calender\n            </a>\n          </div>\n        )}\n        <div>\n          <button className=\"showDetails\" onClick={this.showDetails}>\n            {this.state.showButton}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n    this.fontSize = '12px';\n  }\n}\n\n\nexport { InfoAlert, ErrorAlert, OfflineAlert };","import React, { Component } from \"react\";\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    locations: this.props.locations,\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({showSuggestions:true});\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      return this.setState({\n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city',\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText:''\n      });\n    }\n  };\n  // handleInputChanged = (event) => {\n  //   const value = event.target.value;\n  //   const suggestions = this.props.locations.filter((location) => {\n  //     return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n  //   });\n  //   this.setState({\n  //     query: value,\n  //     suggestions,\n  //   });\n  // };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n  \n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from \"react\";\n// import { ErrorAlert, WarningAlert } from './Alert';\nimport { ErrorAlert } from \"./Alert\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 20,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({ numberOfEvents: value });\n\n    if (value < 1) {\n      this.setState({\n        infoText: \"Select number from 1 to 20\",\n      });\n    } else {\n      this.setState({\n        infoText: \"\",\n      });\n    }\n  };\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className=\"numberOfEvents\">\n        <label>Number of Events: </label>\n        <input\n          type=\"text\"\n          id=\"numberOfEvents__input\"\n          value={numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n        <ErrorAlert text={this.state.infoText} />\n      </div>\n    );\n  }\n\n\n  // submitNumber = (event) => {\n  //   const value = event.target.value;\n  //   if (value > 32 || value < 1 || value === \"\") {\n  //     this.setState({\n  //       infoText: \"Please enter number between 1 ~ 32\",\n  //       warningText: \"\",\n  //       numberOfEvents: value,\n  //     });\n  //   } else if (isNaN(value)) {\n  //     this.setState({\n  //       infoText: \"Please enter number\",\n  //       numberOfEvents: value,\n  //       warningText: \"\",\n  //     });\n  //     if (value.includes(\"fuck\") || value.includes(\"shit\")) {\n  //       this.setState({\n  //         numberOfEvents: value,\n  //         warningText: \"What??!! 🤬🤬🤬\",\n  //         infoText: \"\",\n  //       });\n  //     }\n  //   } else {\n  //     this.props.updateEvents(null, value);\n  //     this.setState({ numberOfEvents: value, infoText: \"\", warningText: \"\" });\n  //   }\n  // };\n\n  // render() {\n  //   return (\n  //     <div className=\"numberOfEvents\">\n  //       {/* <ErrorAlert text={this.state.infoText} /> */}\n  //       {/* <WarningAlert text={this.state.warningText} /> */}\n  //       <label>Number of Events: </label>\n  //       <input\n  //         type=\"text\"\n  //         className=\"numberInput\"\n  //         value={this.state.numberOfEvents}\n  //         onChange={this.submitNumber}\n  //       />\n  //     </div>\n  //   );\n  // }\n}\n\nexport default NumberOfEvents;\n","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n\n   {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   }, \n];\n\nexport { mockData };","import axios from 'axios';\nimport { mockData } from './mock-data';\nimport NProgress from 'nprogress';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://1p08fwk0ok.execute-api.us-east-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\n export const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://1p08fwk0ok.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://1p08fwk0ok.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: '20',\n    currentLocation: \"all\"\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents =\n          location === \"all\"\n            ? events\n            : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? events\n            : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  }\n  // updateEvents = (location) => {\n  //   getEvents().then((events) => {\n  //     const locationEvents = (location === 'all') ?\n  //       events :\n  //       events.filter((event) => event.location === location);\n  //     this.setState({\n  //       events: locationEvents\n  //     });\n  //   });\n  // }\n  \n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={this.state.numberOfEvents}\n        />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}